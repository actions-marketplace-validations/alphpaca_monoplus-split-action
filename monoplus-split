#!/usr/bin/env php
<?php

use Alphpaca\MonoplusSplit\Configuration;
use Alphpaca\MonoplusSplit\Filesystem;
use Alphpaca\MonoplusSplit\Git;
use Alphpaca\MonoplusSplit\Repository;
use Alphpaca\MonoplusSplit\Shell;
use Alphpaca\MonoplusSplit\Ssh;
use Alphpaca\MonoplusSplit\Workspace;
use Symfony\Component\Console\Input\ArgvInput;
use Symfony\Component\Console\Output\ConsoleOutput;
use Symfony\Component\Console\Style\SymfonyStyle;

require_once __DIR__ . '/vendor/autoload.php';

$io = new SymfonyStyle(new ArgvInput(), new ConsoleOutput());
$config = Configuration::createFromEnv($_ENV);
$repositoryUrl = $config->repositoryUrl();
$shell = Shell::new();


$io->title('Monoplus Split Action by Alphpaca');

/**
 * Setup Git
 */
$io->section('[1/5] Setting up Git');

$shell->exec('chmod 0777 . -R');
$git = Git::new($shell);
$git->setup($config->gitUsername, $config->gitEmail);

/**
 * Setting up a workspace
 */
$io->section('[2/5] Setting up a workspace');

$workspace = Workspace::new(Filesystem::new(), uniqid());
$workspace->copyFilesFrom(Shell::GITHUB_WORKSPACE_DIR);
$workspace->goTo();

/**
 * Filtering the package
 */
$io->section('[3/5] Filtering the package');

$repository = Repository::new($shell);
$repository->filterPackage($config->packagePath);

/**
 * Preparing the repository
 */
$io->section('[4/5] Preparing the repository');

$repository->removeExtraHeader('https://github.com/');
$repository->addRemote($workspace->workspaceId, $repositoryUrl);

/**
 * Pushing the package
 */
$io->section('[5/5] Pushing the package');

$repository->push($workspace->workspaceId, $config->targetBranch);

$io->success(sprintf('Package "%s" has been pushed to "%s" branch', $config->packagePath, $config->targetBranch));
